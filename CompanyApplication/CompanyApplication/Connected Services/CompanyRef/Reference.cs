//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CompanyApplication.CompanyRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CompanyRef.ICompanyService")]
    public interface ICompanyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/SaveFamilyDetails", ReplyAction="http://tempuri.org/ICompanyService/SaveFamilyDetailsResponse")]
        string SaveFamilyDetails(CompanyService.FamilyMember member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/SaveFamilyDetails", ReplyAction="http://tempuri.org/ICompanyService/SaveFamilyDetailsResponse")]
        System.Threading.Tasks.Task<string> SaveFamilyDetailsAsync(CompanyService.FamilyMember member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetFamilyMembers", ReplyAction="http://tempuri.org/ICompanyService/GetFamilyMembersResponse")]
        CompanyService.FamilyMember[] GetFamilyMembers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetFamilyMembers", ReplyAction="http://tempuri.org/ICompanyService/GetFamilyMembersResponse")]
        System.Threading.Tasks.Task<CompanyService.FamilyMember[]> GetFamilyMembersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetFamilyRelations", ReplyAction="http://tempuri.org/ICompanyService/GetFamilyRelationsResponse")]
        CompanyService.FamilyMemberRelation[] GetFamilyRelations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetFamilyRelations", ReplyAction="http://tempuri.org/ICompanyService/GetFamilyRelationsResponse")]
        System.Threading.Tasks.Task<CompanyService.FamilyMemberRelation[]> GetFamilyRelationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/AddRelations", ReplyAction="http://tempuri.org/ICompanyService/AddRelationsResponse")]
        void AddRelations(CompanyService.FamilyMemberRelation familyMemberRelation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/AddRelations", ReplyAction="http://tempuri.org/ICompanyService/AddRelationsResponse")]
        System.Threading.Tasks.Task AddRelationsAsync(CompanyService.FamilyMemberRelation familyMemberRelation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/SearchApplication", ReplyAction="http://tempuri.org/ICompanyService/SearchApplicationResponse")]
        CompanyService.FamilyMember[] SearchApplication(string ApplicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/SearchApplication", ReplyAction="http://tempuri.org/ICompanyService/SearchApplicationResponse")]
        System.Threading.Tasks.Task<CompanyService.FamilyMember[]> SearchApplicationAsync(string ApplicationId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompanyServiceChannel : CompanyApplication.CompanyRef.ICompanyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompanyServiceClient : System.ServiceModel.ClientBase<CompanyApplication.CompanyRef.ICompanyService>, CompanyApplication.CompanyRef.ICompanyService {
        
        public CompanyServiceClient() {
        }
        
        public CompanyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompanyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SaveFamilyDetails(CompanyService.FamilyMember member) {
            return base.Channel.SaveFamilyDetails(member);
        }
        
        public System.Threading.Tasks.Task<string> SaveFamilyDetailsAsync(CompanyService.FamilyMember member) {
            return base.Channel.SaveFamilyDetailsAsync(member);
        }
        
        public CompanyService.FamilyMember[] GetFamilyMembers() {
            return base.Channel.GetFamilyMembers();
        }
        
        public System.Threading.Tasks.Task<CompanyService.FamilyMember[]> GetFamilyMembersAsync() {
            return base.Channel.GetFamilyMembersAsync();
        }
        
        public CompanyService.FamilyMemberRelation[] GetFamilyRelations() {
            return base.Channel.GetFamilyRelations();
        }
        
        public System.Threading.Tasks.Task<CompanyService.FamilyMemberRelation[]> GetFamilyRelationsAsync() {
            return base.Channel.GetFamilyRelationsAsync();
        }
        
        public void AddRelations(CompanyService.FamilyMemberRelation familyMemberRelation) {
            base.Channel.AddRelations(familyMemberRelation);
        }
        
        public System.Threading.Tasks.Task AddRelationsAsync(CompanyService.FamilyMemberRelation familyMemberRelation) {
            return base.Channel.AddRelationsAsync(familyMemberRelation);
        }
        
        public CompanyService.FamilyMember[] SearchApplication(string ApplicationId) {
            return base.Channel.SearchApplication(ApplicationId);
        }
        
        public System.Threading.Tasks.Task<CompanyService.FamilyMember[]> SearchApplicationAsync(string ApplicationId) {
            return base.Channel.SearchApplicationAsync(ApplicationId);
        }
    }
}
